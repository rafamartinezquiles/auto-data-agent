# -*- coding: utf-8 -*-
"""Get Plot By Asking.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1_7sr6XZ9GB47XPDVLGbbMLxbiA6n2Yg7

# Get Plot By Asking

Built with popular dependencies, this program helps you plot barplots just asking question. For example: The user will be asked to upload a dataset and the program will show the exisitng features. Then the program will ask you your desired vairables which must have numerical values. Make sure you have properly named the vairable names.
"""

#Install Dependencies
!pip install spacy
!python -m spacy download en_core_web_sm

# Import libraries
import pandas as pd
import matplotlib.pyplot as plt
import spacy
from google.colab import files  # Import for file upload in Colab

# Load the SpaCy English model for NLP
nlp = spacy.load("en_core_web_sm")

# Function to upload a dataset
def upload_dataset():
    try:
        uploaded = files.upload()  # Opens file upload dialog
        file_name = list(uploaded.keys())[0]  # Get the uploaded file name
        df = pd.read_csv(file_name)
        print("Dataset uploaded successfully!")
        print("Columns in the dataset:", df.columns)
        return df
    except Exception as e:
        print("An error occurred while uploading the dataset:", e)
        return None

# Function to analyze the question and identify variables
def get_plot_variables(df):
    question = input("What would you like to plot? (e.g., 'Show the bar plot of sales by region')\n")
    doc = nlp(question.lower())

    # Extracting possible variables by matching with dataframe columns
    possible_variables = [col for col in df.columns if any(col.lower() in token.text for token in doc)]

    # Ensure we have two variables (one for x-axis and one for y-axis)
    if len(possible_variables) < 2:
        print("Could not identify two distinct variables for the plot. Please ask again.")
        return None, None

    return possible_variables[0], possible_variables[1]

# Function to create and display a bar plot
def create_bar_plot(df, x_var, y_var):
    plt.figure(figsize=(10, 6))
    plt.bar(df[x_var], df[y_var])
    plt.xlabel(x_var)
    plt.ylabel(y_var)
    plt.title(f"Bar Plot of {y_var} by {x_var}")
    plt.show()

# Main program flow
def main():
    df = upload_dataset()
    if df is not None:
        x_var, y_var = get_plot_variables(df)
        if x_var and y_var:
            create_bar_plot(df, x_var, y_var)
        else:
            print("Plot could not be created due to missing variables.")

# Run the main function
main()